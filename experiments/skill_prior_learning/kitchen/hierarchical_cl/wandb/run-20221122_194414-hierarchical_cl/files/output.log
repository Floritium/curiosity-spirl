/home/hauke/spirl/spirl/modules/layers.py:12: UserWarning: nn.init.xavier_normal is now deprecated in favor of nn.init.xavier_normal_.
  nn.init.xavier_normal(m.weight.data)
/home/hauke/d4rl/d4rl/kitchen/adept_envs/franka/robot/franka_robot.py:53: SyntaxWarning: "is" with a literal. Did you mean "=="?
  if franka_interface is '':
/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/gym/spaces/box.py:84: UserWarning: [33mWARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Reading configurations for Franka
[37m[40mInitializing Franka sim
Downloading dataset: http://rail.eecs.berkeley.edu/datasets/offline_rl/kitchen/kitchen_microwave_kettle_bottomburner_light-v0.hdf5 to /home/hauke/.d4rl/datasets/kitchen_microwave_kettle_bottomburner_light-v0.hdf5
len train dataset 12325
Reading configurations for Franka
[37m[40mInitializing Franka sim
len val dataset 160
Running Testing
/home/hauke/spirl/spirl/utils/vis_utils.py:25: UserWarning: Attempting to set identical low and high xlims makes transformation singular; automatically expanding.
  plt.xlim(0, array.shape[0] - 1)
Eval time for batch:  2.016651153564453
mse: 0.13567701508873142
val 0: logging videos
Test set: Average loss: 15.6609 in 2.56s
starting epoch  0
/home/hauke/spirl/spirl/utils/pytorch_utils.py:339: UserWarning: This overload of addcmul_ is deprecated:
	addcmul_(Number value, Tensor tensor1, Tensor tensor2)
Consider using one of the following signatures instead:
	addcmul_(Tensor tensor1, Tensor tensor2, *, Number value) (Triggered internally at  ../torch/csrc/utils/python_arg_parser.cpp:1174.)
  exp_avg_sq.mul_(beta2).addcmul_(1 - beta2, grad, grad)
train 0: logging videos
GPU none: ./experiments/skill_prior_learning/kitchen/hierarchical_cl
itr: 0 Train Epoch: 0 [0/4800 (0%)]	Loss: 451.608582
avg time for loading: 0.40s, logs: 0.11s, compute: 0.33s, total: 0.84s
ETA: 112.44h
GPU none: ./experiments/skill_prior_learning/kitchen/hierarchical_cl
itr: 500 Train Epoch: 0 [500/4800 (10%)]	Loss: 1.177356
avg time for loading: 0.00s, logs: 0.00s, compute: 0.22s, total: 0.23s
ETA: 30.19h
GPU none: ./experiments/skill_prior_learning/kitchen/hierarchical_cl
itr: 1000 Train Epoch: 0 [1000/4800 (21%)]	Loss: -1.559157
avg time for loading: 0.00s, logs: 0.00s, compute: 0.22s, total: 0.23s
ETA: 30.32h
Traceback (most recent call last):
  File "spirl/train.py", line 397, in <module>
    ModelTrainer(args=get_args())
  File "spirl/train.py", line 76, in __init__
    self.train(start_epoch)
  File "spirl/train.py", line 110, in train
    self.train_epoch(epoch)
  File "spirl/train.py", line 140, in train_epoch
    output = self.model(inputs)
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/hauke/spirl/spirl/models/skill_prior_mdl.py", line 122, in forward
    output.q = self._run_inference(inputs)
  File "/home/hauke/spirl/spirl/models/closed_loop_spirl_mdl.py", line 42, in _run_inference
    return MultivariateGaussian(self.q(inf_input)[:, -1])
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/hauke/spirl/spirl/modules/recurrent_modules.py", line 79, in forward
    return super().forward(AttrDict(cell_input=input), length=input.shape[1]).output
  File "/home/hauke/spirl/spirl/modules/recurrent_modules.py", line 39, in forward
    output = self.cell(**step_inputs)
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/hauke/spirl/spirl/modules/recurrent_modules.py", line 200, in forward
    output = self.output(h_in)
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/hauke/anaconda3/envs/Hauke/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
KeyboardInterrupt